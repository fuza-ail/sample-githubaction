name: Deployment

on:
  push:
    branches: ["main"]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME}}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  IMAGE_NAME: next-app

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build App
        run: |
          npm install
          npm run build

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME}}
          password: ${{env.DOCKER_HUB_TOKEN}}

      - name: Extract metadata for docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{env.DOCKER_HUB_USERNAME}}/${{env.IMAGE_NAME}}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_SSH_KEY}}
          script: |
            docker stop ${{env.IMAGE_NAME}} || true
            docker rm ${{env.IMAGE_NAME}} || true
            docker rmi ${{env.DOCKER_HUB_USERNAME}}/${{env.IMAGE_NAME}}:latest || true
            docker pull ${{env.DOCKER_HUB_USERNAME}}/${{env.IMAGE_NAME}}:latest || true
            docker run -d \
              --name ${{env.IMAGE_NAME}} \
              -p 3000:3000 \
              --restart always \
              ${{env.DOCKER_HUB_USERNAME}}/${{env.IMAGE_NAME}}:latest

            docker image prune -f
